    2  code
    3  sudo pacman -Syu mc
    4  cd /mnt
    5  mkdir media
    6  sudo mkdir media
    8  smbclient
    9  sudo pacman -Syu samba
   10  smbpasswd -a furyhawk
   11  sudo smbpasswd -a furyhawk
   12  pdbedit -L -v
   13  sudo chmod 400 .credentials
   14  sudo mount -t cifs -o rw,vers=3.0,credentials=~/.credentials //coco/media/ /mnt/media
   15  sudo mount -t cifs -o rw,vers=3.0,credentials=~.credentials //coco/media/ /mnt/media
   16  sudo mount -t cifs -o rw,vers=3.0,credentials=/usr/furyhawk/.credentials //coco/media/ /mnt/media
   17  cd /usr/furyhawk
   18  cd /
   19  sudo mount -t cifs -o rw,vers=3.0,credentials=/home/furyhawk/.credentials ///coco/media/ /mnt/media
   20  sudo mount -t cifs -o rw,vers=3.0,credentials=/home/furyhawk/.credentials smb://coco/media/ /mnt/media
   21  sudo mount -t cifs -o rw,vers=3.0,credentials=/home/furyhawk/.credentials //coco/media/ /mnt/media
   22  sudo mount -t cifs -o rw,vers=3.0,credentials=/home/furyhawk/.credentials //coco.local/media/ /mnt/media
   23  cd media
   24  cd /etc
   26  sudo nano /etc/fstab
   27  smbclient -L hostname -U%
   28  pacman -S base-devel
   29  sh -c "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh)"
   30  [ -d /home/linuxbrew/.linuxbrew ] && eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
   31  gcc
   32  brew doctor
   33  curl -Ls https://micro.mamba.pm/api/micromamba/linux-64/latest | tar -xvj bin/micromamba
   34  which bin/micromamba
   35  bin/micromamba
   36  brew update
   37  brew upgrade
   38  sudo pacman -S micromamba
   39  sudo pacman -S micromamba-bin
   40  brew install micromamba
   41  micromamba shell init -s zsh -p ~/micromamba
   42  python
   43  micromamba config --describe
   44  micromamba install python=3.11 tft -c conda-forge
   45  micromamba activate
   46  cd /mnt/media/workspace
   47  micromamba create --name tft python=3.11
   48  micromamba create --name tft python=3.11  -c conda-forge
   49  pip install -r /path/to/requirements.txt
   50  cd backend/pipeline
   51  sudo chown furyhawk debug.log
   52  sudo chown furyhawk:furyhawk debug.log
   53  micromamba list
   54  cd .config
   55  output DP-2 resolution 3440x1440@144.000
   56  swaymsg output DP-2 resolution 3440x1440@144.000
   57  swaymsg output DP-2 resolution 3440x1440@144
   58  swaymsg output DP-2 resolution 3440x1440@144Hz
   59  man sway-output | grep transform
   60  swaymsg output DP-4 transform anticlockwise
   61  swaymsg output DP-4 resolution 2560x1440@59.951Hz transform anticlockwise
   62  swaymsg output DP-4 resolution 2560x1440@59.951Hz transform transform anticlockwise
   63  ./AndreVallestero.LICENSE
   64  open .
   65  swaymsg output DP-4 resolution 2560x1440@59.951Hz transform 90 anticlockwise
   66  swayoutput
   67  sway-output
   68  swaymsg output 'Dell Inc. DELL U2717D 1CXR587HCUBL' resolution 2560x1440@59.951Hz transform 90 anticlockwise
   69  swaymsg output "Dell Inc. DELL U2717D 1CXR587HCUBL" resolution 2560x1440@59.951Hz transform 90 anticlockwise
   70  swaymsg output " DELL U2717D 1CXR587HCUBL" resolution 2560x1440@59.951Hz transform 90 anticlockwise
   71  swaymsg output "DELL U2717D 1CXR587HCUBL" resolution 2560x1440@59.951Hz transform 90 anticlockwise
   72  swaymsg output "DELL 1CXR587HCUBL" resolution 2560x1440@59.951Hz transform 90 anticlockwise
   73  swaymsg output "DELL" resolution 2560x1440@59.951Hz transform 90 anticlockwise
   74  man 5 sway
   75  man 5 sway-output
   76  pacman -S github-cli
   77  sudo pacman -S github-cli
   78  gh auth login
   79  swaymsg -t get_inputs | jq -r '.[].identifier' | grep -i keyboard
   80  cd /etc/sway
   81  cd /usr/share/sway
   82  gh auth status 2
   83  git clone https://github.com/furyhawk/124c41.git
   84  git config --global user.name "furyhawk"
   85  git config --global user.email furyx@hotmail.com
   86  curl -sfL https://get.k3s.io | sh -
   87  kubectl
   88  sudo k3s server &
   89  sudo k3s agent --server https://myserver:6443 --token ${NODE_TOKEN}
   90  micromamba create --name web python=3.11  -c conda-forge
   91  micromamba activate web
   92  micromamba install --file requirements.txt -c conda-forge
   93  sudo pacman -Syu micromamba
   94  nwg-displays
   95  sudo pacman -S nwg-displays
   96  ./scripts/run_pipeline.sh -nrci
   98  k3s get pod
   99  sudo k3s kubectl get node 
  101  sudo pacman -S beyondallreason-appimagenwg-displays
  102  sudo ./scripts/run_pipeline.sh -rci
  103  git config --global --add safe.directory /mnt/media/workspace/124c41
  104  git config --global --add safe.directory /mnt/media/workspace/PeekingDuck
  105  sudo git pull
  106  cd Desktop
  109  ls
  110  git clone https://github.com/furyhawk/anomalib.git
  111  conda create -n anomalib_env python=3.
  112  micromamba create -n ano python=3.11
  113  micromamba create -n ano python=3.10
  114  micromamba create -n ano python=3.11 -c conda-forge
  115  mamba activate ano
  116  micromamba activate ano
  117  brew list
  118  echo ${CONDA_BASE_ENVIRONMENT}
  119  pacman -Q
  121  pacman -R code
  122  sudo pacman -R code
  123  sudo pacman -S vscodium-bin
  124  sudo pacman -S vscodium
  125  snap install codium --classic
  126  (echo; echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"') >> /home/furyhawk/.zprofile
  127  sudo pacman -S base-devel
  128  brew install gcc
  129  brew install --cask vscodium
  130  brew install vscodium
  131  brew install vscodium-bin
  132  flatpak install flathub com.vscodium.codium
  133  yay -S vscodium-bin
  134  _code .
  136  yay -R vscodium-bin
  137  sudo pacman -S vscode
  138  sudo pacman -S visual-studio-code-bin
  139  sudo pacman -S visual-studio-code
  143  sudo pacman -U code-bin-*.pkg.tar.xz
  144  sudo pacman -U *code-bin-*.pkg.tar.zst
  145  cd ../ && sudo rm -rfv visual-studio-code-bin/
  146  micromamba install ipykernel
  147  micromamba install ipykernel -c conda-forge
  148  micromamba install ipykernel -c git
  149  micromamba activate tft
  150  conda activate /home/furyhawk/micromamba/envs/ano
  151  /home/furyhawk/micromamba/envs/ano/bin/python /home/furyhawk/anomalib/src/anomalib/deploy/export.py
  152  OA
  153  echo MAMBA_ROOT_PREFIX
  154  cat ~/.mambarc
  155  ./micromamba shell init ...
  156  bash ./micromamba shell init ...
  157  micromamba shell init ...
  158  exit
  159  micromamba shell completion
  160  source activate
  161  curl micro.mamba.pm/install.sh | bash
  162  micromamba shell deinit
  163  micromamba clean
  164  echo path
  165  echo $path
  166  micromamba
  167  brew
  168  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  169  eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
  170  brew install --cask miniconda
  171  sudo pacman -S miniconda3
  172  sudo pacman -S miniconda
  173  git clone https://aur.archlinux.org/miniconda3.git 
  174  sudo pacman -U *conda*.pkg.tar.zst
  175  echo "[ -f /opt/miniconda3/etc/profile.d/conda.sh ] && source /opt/miniconda3/etc/profile.d/conda.sh" >> ~/.bashrc
  176  cd miniconda3
  177  miniconda
  178  bash
  180  echo "[ -f /opt/miniconda3/etc/profile.d/conda.sh ] && source /opt/miniconda3/etc/profile.d/conda.sh" >> ~/.zshrc
  181  conda init zsh
  182  conda
  183  conda config --add channels conda-forge
  184  conda config --describe
  185  conda config --set auto_activate_base false
  186  conda update --all
  187  sudo conda update --all
  188  conda update conda
  189  sudo conda update conda
  190  conda create --name web python=3.11
  191  conda install --file requirements.txt -c conda-forge
  192  conda create --name ano python=3.9
  193  pip install onnx
  194  mo
  195  cd web
  196  conda activate web
  197  conda create --name a2 python=3.11
  198  conda activate a2
  199  pip install -e .
  200  pip install GitPython
  201  pip install onnx 
  202  pip install openvino-dev
  203  pip install timm
  204  pip list
  205  pip install timm=0.6.13
  206  pip install timm==0.6.13
  207  git clone https://aur.archlinux.org/microsoft-edge-stable-bin.git
  208  cd microsoft-edge-stable-bin
  210  cd 
  211  cd datasets
  212  find . -name ._\* -delete
  213  mkdocs gh-deploy
  217  sudo pacman --remove --recursive microsoft-edge-stable-bin
  219  yay -S microsoft-edge-stable
  220  cd anomalib
  221  conda activate ano
  223  cd backend
  224  conda create --name tft python=3.11
  225  conda install --file requirements.txt
  226  output -h
  229  weston-presentation-shm
  230  swaymsg -t get_outputs
  231  yay -h
  240  lspci
  241  lspci -v
  242  alsamixer
  243  where Beyond
  244  where Beyond*
  245  where Beyond**
  246  where bar
  247  where bar*
  248  where bar***
  249  whereis Bey
  250  whereis Beyond**
  251  whereis bar*
  252  whereis bar
  253  bar
  257  git clone https://github.com/furyhawk/PeekingDuck.git
  261  vscodium .
  263  conda env list
  264  conda create --name train python=3.11
  271  pip install protobuf==3.20.1
  272  pytest peekingduck/training/tests/
  276  yay -u
  280  pytest peekingduck/training/tests/test_config
  284  conda activate train
  289  conda create --name myenv python=3.
  290  conda create --name test python=3.8
  291  conda activate test
  292  pip install -r requirements.txt
  293  pip install -r requirements_cicd.txt
  296  bash ./scripts/run_tests.sh unit
  297  git config pull.rebase false
  304  sudo pacman -S discord
  316  pacman -Syu
  318  sudo code .
  319  sudo code . --no-sandbox
  325  htop
  329  OC
  332  sudo ./scripts/run_pipeline.sh -nrc
  335  cd /mnt/media/workspace/tftchamp
  336  conda activate tft
  337  sudo ./scripts/run_pipeline.sh -nrci
  341  git clone https://github.com/furyhawk/glfw.git
  342  cd glfw
  344  mkdir build
  347  sudo apt install xorg-dev
  350  pacman -h
  351  pacman -D
  352  sudo pacman -D
  354  sudo pacman -Fy xorg-dev
  355  sudo pacman -S xorg-dev
  356  sudo pacman -F xorg-dev
  357  sudo pacman -F cmake
  358  sudo pacman -S cmake
  359  cmake ../
  361  cmake -S . -B build
  362  cmake -S path/to/glfw -B build -D GLFW_USE_WAYLAND=1
  363  cmake -S . -B build -D GLFW_USE_WAYLAND=1
  364  cd build
  365  make
  367  sudo mc
  369  history|grep vscode
  370  history|grep -R vscode
  372  sudo pacman -Syu
  374  ranger
  375  cd 124c41
  379  cd tftchamp
  381  cd ..
  382  cd PeekingDuck
  383  git pull
  384  git status
  385  code .
  386  cd
  388  ls -lah
  389  cat .history
  390  cat .zhistory
  391  cat .zhistory|grep code
  393  git clone https://AUR.archlinux.org/visual-studio-code-bin.git
  394  cd visual-studio-code-bin
  396  mc
  397  malepkg -s
  398  makepkg -s
  399  sudo pacman -U visual-studio-code-bin-*.pkg.tar.xz
  400  sudo pacman -U *.pkg.tar.xz
  401  ll
  402  sudo pacman -U *.pkg.tar.zst
  403  pacman list
  404  yay list
  405  yay list|grep edge
  406  history
